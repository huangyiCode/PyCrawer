The opening function: (used to imported with model)
    if __name__ =='__main__'
        ...

The import way:
    1.import *
    2.import * as [alias]
    3.from * import (*Sub)

Define a function:
   def functionName(params):
       [content]

Use Tyr..finally block:
   try:
      [Maybe throw exception code in there]
   finally:
      [Must do something]

Use 'with' keyword instead IO code:

     with [Maybe throw exception code in there] as [The return alias]:
          [Use the return alias to do something (Already contains alias.close())]

Use "print" function:
     print [content]
     print('[content]')

Use "for" block:
   1.iteration content
    for var_name in [array/string]:
        [Do something use content]
   2.iteration index
    for index in range([number]):
        [Do something use index]

Use "if" block:
   if [conditions]:
      [if content]
   elif [conditions]:
      [elif content]
   else:
      [else content]

Callback function:
   def function(callback=None):
       callback('infoMessage')

Use Array:
  arr=[i for i in range(10)]    --------->  [0,1,2,3,4,6,7,8,9]
  arr=[0 for i in range(10)]    --------->  [0,0,0,0,0,0,0,0,0]
  arr=['name'+str(i) for i in range(3)]    --------->  ['name0','name1','name2']

How to used Process?
 1.use os
 2.use multiprocessing
 3.use Pool

Communicate between Process:
 1.Queue
 2.Pipe

How to used Thread?
 1.Use threading.Thread to use Thread.
 2.Extends thread.Thread to use Thread.

How to make Thread safety?
  Use threading.RLock()
       acquire()    start lock
       release()    release lock
How to used coroutines(协程)?


What difference between Thread and coroutines?

